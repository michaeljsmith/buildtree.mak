#!/usr/bin/env bash

if [ $# -ne 3 ]; then
	echo "ARGS: $*"
	echo "Usage: $0 <outputfile> <directory> <objdir>"
	exit 1
fi
output_path=$1
directory=$2
object_directory=$3

directory_marker_path=$directory/.marker

echo "" > $output_path

# To prevent infinite recursion, skip directories that we have created - we 
# can identify those directories because they have a directory marker file 
# added by the makefile.
if [ -f $directory_marker_path ]; then
	exit 0
fi

dependency_extension=dep.mak

dependency_directory=$(dirname $output_path)

entries=$(ls -p $directory)

echo "directory=$directory" >> $output_path
echo "dependency_directory=$dependency_directory" >> $output_path
echo "object_directory=$object_directory" >> $output_path

echo "include makelib/dependency_generation.mak" >> $output_path

echo "" >> $output_path
echo "old_total_objects=\$(total_objects)" >> $output_path
echo "total_objects=" >> $output_path

for entry in $entries; do
	echo "" >> $output_path
	echo "objects=" >> $output_path
	echo "-include $dependency_directory/$entry.$dependency_extension" >> $output_path
	echo "total_objects:=\$(total_objects) \$(objects)" >> $output_path
done

echo "" >> $output_path
echo "objects:=\$(total_objects)" >> $output_path
echo "total_objects:=\$(old_total_objects)" >> $output_path

